#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.4 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 130 0 1 #"\0"
0 75 1 #"\0"
0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 12 #"Courier New\0"
0 14 91 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 92 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 90 -1 90 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 90 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 14 91 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 38 38 128 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 194 116 31 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 132 60 36 0
0 0 -1 -1 0 1 #"\0"
0 75 12 #"Courier New\0"
0.0 10 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 200 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 0 -1 -1 4 32 #"widget.rkt::browser-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 59
#"macro-debugger/syntax-browser/properties color-text% basic\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 71 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 190 190 190
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 107 142 35 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 100 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 139 0 0 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 100 149 237
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 65 105 225 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 70 130 180 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 47 79 79 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 139 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 75 0 130 0 0
0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 160 32 240 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 165 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 250 128 114
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 184 134 11 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 128 128 0 0
0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 169 169 169
0 0 0 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 255 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 107 142 35
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 100 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 139 0 0 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 100 149 237
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 65 105 225
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 65 105 225
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 130 180
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 70 130 180
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 47 79 79 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 139 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 139 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 75 0 130 224
255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 75 0 130 255
228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 160 32 240
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 255 165 0
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 250 128 114
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 250 128 114
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 184 134 11
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 128 0
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 128 128 0
255 228 225 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
224 255 255 -1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 169 169 169
255 228 225 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 12 -1 -1 -1 -1 -1 -1 0 0 1 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 75 1 #"\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 0 1 #"\0"
0 75 10 #"Monospace\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 -1 -1 70 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1           0 2472 0 30 3 10 #"#lang eopl"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 7 #"require"
0 0 26 3 1 #" "
0 0 14 3 13 #"racket/string"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 14 #"; Integrantes:"
0 0 26 29 1 #"\n"
0 0 17 3 39 #"; Juan Esteban Camargo Chacon - 1924984"
0 0 26 29 1 #"\n"
0 0 17 3 8 #"; Brayan"
0 0 26 29 1 #"\n"
0 0 17 3 11 #"; Sebastian"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 13 #"; COMENTARIO "
0 0 17 3 4 #"por "
0 0 17 3 14 #"PROCEDIMIENTO "
0 0 17 3 4 #"QUE "
0 0 17 3 9 #"EXPLIQUE "
0 0 17 3 4 #"que "
0 0 17 3 8 #"realiza "
0 0 17 3 2 #"y "
0 0 17 3 9 #"PARA QUE "
0 0 17 3 3 #"lo "
0 0 17 3 7 #"realiza"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 13 #"; 1) Disenar "
0 0 17 3 14 #"interpretador "
0 0 17 3 7 #"con la "
0 0 17 3 10 #"siguiente "
0 0 17 3 11 #"gramatica, "
0 0 17 3 12 #"operaciones "
0 0 17 3 9 #"notacion "
0 0 17 3 6 #"infija"
0 0 26 29 1 #"\n"
0 0 17 3 5 #"; 2) "
0 0 17 3 8 #"Definir "
0 0 17 3 9 #"ambiente "
0 0 17 3 8 #"inicial "
0 0 17 3 2 #"y "
0 0 17 3 10 #"modificar "
0 0 17 3 3 #"la "
0 0 17 3 8 #"funcion "
0 0 17 3 16 #"evaluar-expresio"
0 0 17 3 1 #"n"
0 0 17 3 1 #" "
0 0 17 3 5 #"para "
0 0 17 3 4 #"que "
0 0 17 3 7 #"acepte "
0 0 17 3 3 #"el "
0 0 17 3 8 #"ambiente"
0 0 26 29 1 #"\n"
0 0 17 3 13 #";    Disenar "
0 0 17 3 12 #"una funcion "
0 0 17 3 8 #"llamada "
0 0 17 3 15 #"buscar-variable"
0 0 26 29 1 #"\n"
0 0 17 3 30 #"; 3) Implementar los booleanos"
0 0 26 29 1 #"\n"
0 0 17 3 14 #"; 4) Extender "
0 0 17 3 13 #"la gramatica "
0 0 17 3 4 #"con "
0 0 17 3 18 #"condicionales (if)"
0 0 26 29 1 #"\n"
0 0 17 3 5 #"; 5) "
0 0 17 3 12 #"Implementar "
0 0 17 3 15 #"Declaracion de "
0 0 17 3 10 #"Variables "
0 0 17 3 8 #"Locales "
0 0 17 3 5 #"(let)"
0 0 26 29 1 #"\n"
0 0 17 3 14 #"; 6) Extender "
0 0 17 3 3 #"la "
0 0 17 3 10 #"Gramatica "
0 0 17 3 11 #"para crear "
0 0 17 3 15 #"procedimientos "
0 0 17 3 4 #"... "
0 0 17 3 8 #"proc-val"
0 0 26 29 1 #"\n"
0 0 17 3 14 #"; 7) Extender "
0 0 17 3 13 #"la Gramatica "
0 0 17 3 5 #"para "
0 0 17 3 8 #"evaluar "
0 0 17 3 14 #"Procedimientos"
0 0 26 29 1 #"\n"
0 0 17 3 14 #"; 8) Extender "
0 0 17 3 3 #"la "
0 0 17 3 10 #"Gramatica "
0 0 17 3 5 #"para "
0 0 17 3 8 #"incluir "
0 0 17 3 9 #"llamados "
0 0 17 3 10 #"recursivos"
0 0 26 29 1 #"\n"
0 0 17 3 15 #"; B) Dibuje el "
0 0 17 3 9 #"arbol de "
0 0 17 3 9 #"sintaxis "
0 0 17 3 10 #"abstracta "
0 0 17 3 3 #"de "
0 0 17 3 2 #"lo"
0 0 17 3 2 #"s "
0 0 17 3 12 #"ejerciicios "
0 0 17 3 4 #"del "
0 0 17 3 6 #"punto "
0 0 17 3 1 #"7"
0 0 26 29 1 #"\n"
0 0 17 3 16 #"; B) Dibujar el "
0 0 17 3 12 #"diagrama de "
0 0 17 3 10 #"ambientes "
0 0 17 3 3 #"de "
0 0 17 3 4 #"los "
0 0 17 3 11 #"ejercicios "
0 0 17 3 4 #"del "
0 0 17 3 6 #"punto "
0 0 17 3 2 #"7 "
0 0 17 3 2 #"( "
0 0 17 3 6 #"tener "
0 0 17 3 3 #"en "
0 0 17 3 7 #"cuenta "
0 0 17 3 3 #"el "
0 0 17 3 9 #"ambiente "
0 0 17 3 7 #"inical "
0 0 17 3 4 #"del "
0 0 17 3 6 #"punto "
0 0 17 3 2 #"1)"
0 0 26 29 1 #"\n"
0 0 17 3 27 #"; Utilizacion del lenguaje;"
0 0 26 29 1 #"\n"
0 0 17 3 5 #"; 11)"
0 0 26 29 1 #"\n"
0 0 17 3 9 #";     a) "
0 0 17 3 12 #"Escribir un "
0 0 17 3 15 #"programa en su "
0 0 17 3 9 #"lenguaje "
0 0 17 3 3 #"de "
0 0 17 3 13 #"programacion "
0 0 17 3 4 #"que "
0 0 17 3 9 #"contenga "
0 0 17 3 3 #"un "
0 0 17 3 14 #"procedimiento "
0 0 17 3 4 #"que "
0 0 17 3 8 #"permita "
0 0 17 3 8 #"calcular"
0 0 26 29 1 #"\n"
0 0 17 3 8 #";     el"
0 0 17 3 1 #" "
0 0 17 3 4 #"area"
0 0 17 3 1 #" "
0 0 17 3 2 #"de"
0 0 17 3 1 #" "
0 0 17 3 2 #"un"
0 0 17 3 1 #" "
0 0 17 3 7 #"circulo"
0 0 17 3 1 #" "
0 0 17 3 4 #"dado"
0 0 17 3 1 #" "
0 0 17 3 2 #"un"
0 0 17 3 1 #" "
0 0 17 3 5 #"radio"
0 0 17 3 1 #" "
0 0 17 3 2 #"( "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 1 #"="
0 0 17 3 1 #" "
0 0 17 3 2 #"pi"
0 0 17 3 1 #" "
0 0 17 3 1 #"*"
0 0 17 3 1 #" "
0 0 17 3 3 #"r^2"
0 0 17 3 1 #" "
0 0 17 3 2 #") "
0 0 17 3 4 #"debe"
0 0 17 3 1 #" "
0 0 17 3 7 #"incluir"
0 0 17 3 1 #" "
0 0 17 3 7 #"valores"
0 0 17 3 1 #" "
0 0 17 3 9 #"flotantes"
0 0 17 3 1 #" "
0 0 17 3 2 #"en"
0 0 17 3 1 #" "
0 0 17 3 2 #"el"
0 0 17 3 1 #" "
0 0 17 3 8 #"lenguaje"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 9 #";     b) "
0 0 17 3 12 #"Escribir un "
0 0 17 3 15 #"programa en su "
0 0 17 3 9 #"lenguaje "
0 0 17 3 4 #"que "
0 0 17 3 9 #"contenga "
0 0 17 3 3 #"un "
0 0 17 3 14 #"procedimiento "
0 0 17 3 4 #"que "
0 0 17 3 8 #"permita "
0 0 17 3 9 #"calcular "
0 0 17 3 3 #"el "
0 0 17 3 10 #"factorial "
0 0 17 3 3 #"de "
0 0 17 3 3 #"un "
0 0 17 3 7 #"numero "
0 0 17 3 1 #"n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 9 #";     c) "
0 0 17 3 12 #"Escribir un "
0 0 17 3 13 #"programa que "
0 0 17 3 9 #"contenga "
0 0 17 3 3 #"un "
0 0 17 3 14 #"procedimiento "
0 0 17 3 4 #"que "
0 0 17 3 8 #"permita "
0 0 17 3 9 #"calcular "
0 0 17 3 4 #"una "
0 0 17 3 15 #"multiplicacion "
0 0 17 3 3 #"de "
0 0 17 3 6 #"forma "
0 0 17 3 10 #"recursiva "
0 0 17 3 2 #"a "
0 0 17 3 7 #"traves "
0 0 17 3 3 #"de "
0 0 17 3 5 #"sumas"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 9 #";     d) "
0 0 17 3 12 #"Escribir un "
0 0 17 3 9 #"programa "
0 0 17 3 10 #"recursivo "
0 0 17 3 4 #"que "
0 0 17 3 8 #"permita "
0 0 17 3 7 #"sumar, "
0 0 17 3 7 #"restar "
0 0 17 3 2 #", "
0 0 17 3 12 #"multiplicar "
0 0 17 3 4 #"dos "
0 0 17 3 8 #"numeros "
0 0 17 3 9 #"haciendo "
0 0 17 3 4 #"uso "
0 0 17 3 8 #"solament"
0 0 17 3 2 #"e "
0 0 17 3 4 #"dee "
0 0 17 3 5 #"add1 "
0 0 17 3 2 #"y "
0 0 17 3 4 #"sub1"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 27 #";<programa> :=  <expresion>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 33 #";               un-programa (exp)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 24 #";<expresion> := <numero>"
0 0 26 29 1 #"\n"
0 0 17 3 32 #";               numero-lit (num)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 33 #";            := \"\\\"\" <texto> \"\\\"\""
0 0 26 29 1 #"\n"
0 0 17 3 33 #";               <texto-lit (txt)>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 31 #";            := <identificador>"
0 0 26 29 1 #"\n"
0 0 17 3 30 #";               <var-exp (id)>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";            := "
0 0 17 3 11 #"(expresion "
0 0 17 3 16 #"<primitiva-binar"
0 0 17 3 4 #"ia> "
0 0 17 3 10 #"expresion)"
0 0 26 29 1 #"\n"
0 0 17 3 39 #";               <primapp-bin-exp (exp1 "
0 0 17 3 13 #"prim-binaria "
0 0 17 3 6 #"exp2)>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";            := "
0 0 17 3 16 #"<primitiva-unari"
0 0 17 3 1 #"a"
0 0 17 3 2 #"> "
0 0 17 3 11 #"(expresion)"
0 0 26 29 1 #"\n"
0 0 17 3 32 #";               <primapp-un-exp "
0 0 17 3 18 #"(prim-unaria exp)>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 31 #";            := Si <expresion> "
0 0 17 3 9 #"entonces "
0 0 17 3 12 #"<expresion> "
0 0 17 3 5 #"sino "
0 0 17 3 12 #"<expresion> "
0 0 17 3 5 #"finSI"
0 0 26 29 1 #"\n"
0 0 17 3 33 #";               <condicional-exp "
0 0 17 3 10 #"(test-exp "
0 0 17 3 9 #"true-exp "
0 0 17 3 11 #"false-exp)>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 27 #";            := declarar ( "
0 0 17 3 20 #"{<indentificador> = "
0 0 17 3 19 #"<expresion>}*(;) ) "
0 0 17 3 13 #"{<expresion>}"
0 0 26 29 1 #"\n"
0 0 17 3 35 #";               <variableLocal-exp "
0 0 17 3 5 #"(ids "
0 0 17 3 5 #"exps "
0 0 17 3 8 #"cuerpo)>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 23 #";            := letrec "
0 0 17 3 17 #"{<identificador> "
0 0 17 3 26 #"({<indetificador>}*(,)) = "
0 0 17 3 14 #"<expresion>}* "
0 0 17 3 3 #"in "
0 0 17 3 11 #"<expresion>"
0 0 26 29 1 #"\n"
0 0 17 3 30 #";               <letrec-exp ( "
0 0 17 3 11 #"proc-names "
0 0 17 3 4 #"ids "
0 0 17 3 7 #"bodies "
0 0 17 3 14 #"letrec-body )>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";            := "
0 0 17 3 16 #"procedimiento ( "
0 0 17 3 24 #"{<indentificador>}*(,)) "
0 0 17 3 5 #"haga "
0 0 17 3 12 #"<expresion> "
0 0 17 3 7 #"finProc"
0 0 26 29 1 #"\n"
0 0 17 3 35 #";               <procedimiento-exp "
0 0 17 3 5 #"(ids "
0 0 17 3 8 #"cuerpo)>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 36 #";            := evaluar <expresion> "
0 0 17 3 20 #"({<expresion>}*(,)) "
0 0 17 3 7 #"finEval"
0 0 26 29 1 #"\n"
0 0 17 3 34 #";               <app-exp exp exps>"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";<primitiva-bina"
0 0 17 3 11 #"ria> :=  + "
0 0 17 3 16 #"(primitiva-suma)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";               "
0 0 17 3 1 #" "
0 0 17 3 10 #"    :=  ~ "
0 0 17 3 17 #"(primitiva-resta)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";               "
0 0 17 3 11 #"     :=  / "
0 0 17 3 15 #"(primitiva-div)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";               "
0 0 17 3 1 #" "
0 0 17 3 10 #"    :=  * "
0 0 17 3 17 #"(primitiva-multi)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";               "
0 0 17 3 1 #" "
0 0 17 3 15 #"    :=  concat "
0 0 17 3 18 #"(primitiva-concat)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";<primitiva-unar"
0 0 17 3 1 #"i"
0 0 17 3 15 #"a>:=  longitud "
0 0 17 3 20 #"(primitiva-longitud)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 17 3 15 #"               "
0 0 17 3 1 #" "
0 0 17 3 11 #"  :=  add1 "
0 0 17 3 16 #"(primitiva-add1)"
0 0 26 29 1 #"\n"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";               "
0 0 17 3 1 #" "
0 0 17 3 11 #"  :=  sub1 "
0 0 17 3 16 #"(primitiva-sub1)"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";***************"
0 0 17 3 1 #"*"
0 0 17 3 15 #"***************"
0 0 17 3 2 #"**"
0 0 17 3 5 #"*****"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 4 #"****"
0 0 17 3 2 #"**"
0 0 17 3 3 #"***"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 31 #"; DEFINICION LEXICA Y GRAMATICA"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 22 3 1 #"'"
0 0 26 3 1 #"("
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 8 #"espacios"
0 0 26 3 2 #" ("
0 0 14 3 10 #"whitespace"
0 0 26 3 2 #") "
0 0 14 3 4 #"skip"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 10 #"cometarios"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"%\""
0 0 26 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 26 3 2 #" ("
0 0 14 3 3 #"not"
0 0 26 3 1 #" "
0 0 22 3 9 #"#\\newline"
0 0 26 3 4 #"))) "
0 0 14 3 4 #"skip"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 13 #"identificador"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"@\""
0 0 26 3 1 #" "
0 0 14 3 6 #"letter"
0 0 26 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 2 #"or"
0 0 26 3 1 #" "
0 0 14 3 6 #"letter"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 1 #" "
0 0 19 3 3 #"\"?\""
0 0 26 3 4 #"))) "
0 0 14 3 6 #"symbol"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 17 3 9 #"; enteros"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 26 3 2 #" ("
0 0 14 3 5 #"digit"
0 0 26 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 3 #")) "
0 0 14 3 6 #"number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 3 #")) "
0 0 14 3 6 #"number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 17 3 11 #"; decimales"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 26 3 2 #" ("
0 0 14 3 5 #"digit"
0 0 26 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 3 #")) "
0 0 14 3 6 #"number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 6 #"numero"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"-\""
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 2 #") "
0 0 19 3 3 #"\".\""
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 3 #")) "
0 0 14 3 6 #"number"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 17 3 7 #"; texto"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 4 #"text"
0 0 26 3 2 #" ("
0 0 19 3 4 #"\"\\\"\""
0 0 26 3 2 #" ("
0 0 14 3 2 #"or"
0 0 26 3 1 #" "
0 0 14 3 6 #"letter"
0 0 26 3 1 #" "
0 0 14 3 10 #"whitespace"
0 0 26 3 2 #") "
0 0 26 3 1 #"("
0 0 14 3 5 #"arbno"
0 0 26 3 2 #" ("
0 0 14 3 2 #"or"
0 0 26 3 1 #" "
0 0 14 3 6 #"letter"
0 0 26 3 1 #" "
0 0 14 3 5 #"digit"
0 0 26 3 1 #" "
0 0 14 3 10 #"whitespace"
0 0 26 3 1 #" "
0 0 19 3 3 #"\":\""
0 0 26 3 1 #" "
0 0 19 3 3 #"\"?\""
0 0 26 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 26 3 1 #" "
0 0 19 3 3 #"\"'\""
0 0 26 3 1 #" "
0 0 26 3 3 #")) "
0 0 19 3 4 #"\"\\\"\""
0 0 26 3 2 #") "
0 0 14 3 6 #"string"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    )"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  )"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"  "
0 0 22 3 1 #"'"
0 0 26 3 1 #"("
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 17 3 10 #"; programa"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 8 #"programa"
0 0 26 3 2 #" ("
0 0 14 3 9 #"expresion"
0 0 26 3 2 #") "
0 0 14 3 11 #"un-programa"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 17 3 11 #"; expresion"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 2 #" ("
0 0 14 3 6 #"numero"
0 0 26 3 2 #") "
0 0 14 3 10 #"numero-lit"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 2 #" ("
0 0 14 3 4 #"text"
0 0 26 3 2 #") "
0 0 14 3 9 #"texto-lit"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 2 #" ("
0 0 14 3 13 #"identificador"
0 0 26 3 2 #") "
0 0 14 3 7 #"var-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 3 #" ( "
0 0 19 3 3 #"\"(\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 14 3 17 #"primitiva-binaria"
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 26 3 3 #" ) "
0 0 14 3 15 #"primapp-bin-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 2 #" ("
0 0 14 3 16 #"primitiva-unaria"
0 0 26 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 3 #"\")\""
0 0 26 3 1 #" "
0 0 26 3 2 #") "
0 0 14 3 14 #"primapp-un-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 3 #" ( "
0 0 19 3 4 #"\"Si\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 10 #"\"entonces\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 6 #"\"sino\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 7 #"\"finSI\""
0 0 26 3 2 #") "
0 0 14 3 15 #"condicional-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 2 #" ("
0 0 19 3 10 #"\"declarar\""
0 0 26 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 14 #"separated-list"
0 0 26 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 26 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 3 #"\";\""
0 0 26 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 26 3 1 #" "
0 0 19 3 3 #"\"{\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 3 #"\"}\""
0 0 26 3 2 #") "
0 0 14 3 17 #"variableLocal-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 2 #" ("
0 0 19 3 15 #"\"procedimiento\""
0 0 26 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 14 #"separated-list"
0 0 26 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 26 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 26 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 26 3 1 #" "
0 0 19 3 6 #"\"haga\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 9 #"\"finProc\""
0 0 26 3 3 #" ) "
0 0 14 3 17 #"procedimiento-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 3 #" ( "
0 0 19 3 9 #"\"evaluar\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 14 #"separated-list"
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 26 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 26 3 1 #" "
0 0 19 3 9 #"\"finEval\""
0 0 26 3 2 #") "
0 0 14 3 11 #"evaluar-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 9 #"expresion"
0 0 26 3 3 #" ( "
0 0 19 3 8 #"\"letrec\""
0 0 26 3 2 #" ("
0 0 14 3 5 #"arbno"
0 0 26 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 26 3 1 #" "
0 0 19 3 3 #"\"(\""
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 14 #"separated-list"
0 0 26 3 1 #" "
0 0 14 3 13 #"identificador"
0 0 26 3 1 #" "
0 0 19 3 3 #"\",\""
0 0 26 3 2 #") "
0 0 19 3 3 #"\")\""
0 0 26 3 1 #" "
0 0 19 3 3 #"\"=\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 2 #") "
0 0 19 3 4 #"\"in\""
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 2 #") "
0 0 14 3 10 #"letrec-exp"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 17 3 19 #"; primitiva-binaria"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 17 #"primitiva-binaria"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"+\""
0 0 26 3 2 #") "
0 0 14 3 14 #"primitiva-suma"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 17 #"primitiva-binaria"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"~\""
0 0 26 3 2 #") "
0 0 14 3 15 #"primitiva-resta"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 17 #"primitiva-binaria"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"/\""
0 0 26 3 2 #") "
0 0 14 3 13 #"primitiva-div"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 17 #"primitiva-binaria"
0 0 26 3 2 #" ("
0 0 19 3 3 #"\"*\""
0 0 26 3 2 #") "
0 0 14 3 15 #"primitiva-multi"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 17 #"primitiva-binaria"
0 0 26 3 2 #" ("
0 0 19 3 8 #"\"concat\""
0 0 26 3 2 #") "
0 0 14 3 16 #"primitiva-concat"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"    "
0 0 17 3 18 #"; primitiva-unaria"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 16 #"primitiva-unaria"
0 0 26 3 2 #" ("
0 0 19 3 10 #"\"longitud\""
0 0 26 3 2 #") "
0 0 14 3 18 #"primitiva-longitud"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 16 #"primitiva-unaria"
0 0 26 3 2 #" ("
0 0 19 3 6 #"\"add1\""
0 0 26 3 2 #") "
0 0 14 3 14 #"primitiva-add1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 16 #"primitiva-unaria"
0 0 26 3 2 #" ("
0 0 19 3 6 #"\"sub1\""
0 0 26 3 2 #") "
0 0 14 3 14 #"primitiva-sub1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    )"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  )"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";***************"
0 0 17 3 16 #"****************"
0 0 17 3 7 #"*******"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 4 #"****"
0 0 17 3 5 #"*****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 8 #"; SLLGEN"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 37 #"; Definicion Construccion automatica "
0 0 17 3 3 #"de "
0 0 17 3 4 #"los "
0 0 17 3 10 #"Datatypes "
0 0 17 3 4 #"con "
0 0 17 3 6 #"SLLGEN"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 14 3 28 #"sllgen:make-define-datatypes"
0 0 26 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 26 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 17 #"mostrar-datatypes"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 3 #" ()"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 28 #"sllgen:list-define-datatypes"
0 0 26 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 26 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 8 #"; Parser"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 10 #"scan&parse"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 25 #"sllgen:make-string-parser"
0 0 26 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 26 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 9 #"; Scanner"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 9 #"just-scan"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 26 #"sllgen:make-string-scanner"
0 0 26 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 26 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 32 #"; Crear Prompter o Interpretador"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 13 #"interpretador"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 20 #"sllgen:make-rep-loop"
0 0 26 3 1 #" "
0 0 19 3 5 #"\"C:/\""
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                        ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 26 3 2 #") "
0 0 26 3 1 #"("
0 0 14 3 12 #"eval-program"
0 0 26 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 24 #"                        "
0 0 26 3 1 #"("
0 0 14 3 25 #"sllgen:make-stream-parser"
0 0 26 3 1 #" "
0 0 14 3 6 #"lexica"
0 0 26 3 1 #" "
0 0 14 3 9 #"gramatica"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";***************"
0 0 17 3 16 #"****************"
0 0 17 3 7 #"*******"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 4 #"****"
0 0 17 3 5 #"*****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 15 #"; EL INTERPRETE"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 26 #"; Funcion Evaluar Programa"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 12 #"eval-program"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"pgm"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 26 3 1 #" "
0 0 14 3 8 #"programa"
0 0 26 3 1 #" "
0 0 14 3 3 #"pgm"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 11 #"un-programa"
0 0 26 3 2 #" ("
0 0 14 3 4 #"body"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 20 #"                   ("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 4 #"body"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 8 #"init-env"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 27 #"; Funcion Evaluar Expresion"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 15 #"eval-expression"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 26 3 1 #" "
0 0 14 3 9 #"expresion"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 10 #"numero-lit"
0 0 26 3 2 #" ("
0 0 14 3 3 #"num"
0 0 26 3 2 #") "
0 0 14 3 3 #"num"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 7 #"var-exp"
0 0 26 3 2 #" ("
0 0 14 3 2 #"id"
0 0 26 3 3 #") ("
0 0 14 3 15 #"buscar-variable"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 2 #"id"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 15 #"primapp-bin-exp"
0 0 26 3 2 #" ("
0 0 14 3 4 #"exp1"
0 0 26 3 1 #" "
0 0 14 3 12 #"prim-binaria"
0 0 26 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 26 3 2 #") "
0 0 26 3 1 #"("
0 0 14 3 17 #"apply-primapp-bin"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 14 3 12 #"prim-binaria"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 4 #"exp2"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 14 #"primapp-un-exp"
0 0 26 3 2 #" ("
0 0 14 3 11 #"prim-unaria"
0 0 26 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 26 3 2 #") "
0 0 26 3 1 #"("
0 0 14 3 16 #"apply-primapp-un"
0 0 26 3 1 #" "
0 0 14 3 11 #"prim-unaria"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 4 #"exp1"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 9 #"texto-lit"
0 0 26 3 2 #" ("
0 0 14 3 4 #"text"
0 0 26 3 3 #") ("
0 0 14 3 11 #"string-trim"
0 0 26 3 1 #" "
0 0 14 3 4 #"text"
0 0 26 3 1 #" "
0 0 19 3 4 #"\"\\\"\""
0 0 26 3 3 #" ))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 15 #"condicional-exp"
0 0 26 3 2 #" ("
0 0 14 3 8 #"test-exp"
0 0 26 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 26 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 26 3 3 #") ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 11 #"true-value?"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 8 #"test-exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 37 #"                                    ("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 8 #"true-exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 36 #"                                    "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 9 #"false-exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 17 #"variableLocal-exp"
0 0 26 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 4 #"exps"
0 0 26 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 26 3 2 #") "
0 0 26 3 1 #"("
0 0 15 3 3 #"let"
0 0 26 3 1 #" "
0 0 26 3 2 #"(("
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 10 #"eval-rands"
0 0 26 3 1 #" "
0 0 14 3 4 #"exps"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 4 #"))) "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 10 #"extend-env"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 17 #"procedimiento-exp"
0 0 26 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 26 3 2 #") "
0 0 26 3 1 #"("
0 0 14 3 9 #"cerradura"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 6 #"cuerpo"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 11 #"evaluar-exp"
0 0 26 3 2 #" ("
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 4 #"exps"
0 0 26 3 3 #") ("
0 0 15 3 3 #"let"
0 0 26 29 1 #"\n"
0 0 26 3 33 #"                                 "
0 0 26 3 2 #"(("
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 34 #"                                  "
0 0 26 3 1 #"("
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 10 #"eval-rands"
0 0 26 3 1 #" "
0 0 14 3 4 #"exps"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 34 #"                                 ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 8 #"procval?"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 37 #"                                     "
0 0 26 3 1 #"("
0 0 14 3 15 #"apply-procedure"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 37 #"                                     "
0 0 26 3 1 #"("
0 0 14 3 10 #"eopl:error"
0 0 26 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 7 #"Intento"
0 0 19 3 1 #" "
0 0 19 3 7 #"aplicar"
0 0 19 3 1 #" "
0 0 19 3 1 #"a"
0 0 19 3 1 #" "
0 0 19 3 2 #"un"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 13 #"precidimiento"
0 0 19 3 1 #" "
0 0 19 3 3 #"~s\""
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 10 #"letrec-exp"
0 0 26 3 2 #" ("
0 0 14 3 10 #"proc-names"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 26 3 1 #" "
0 0 14 3 11 #"letrec-body"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 19 #"                  ("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 11 #"letrec-body"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                   "
0 0 26 3 1 #"("
0 0 14 3 22 #"extend-env-recursively"
0 0 26 3 1 #" "
0 0 14 3 10 #"proc-names"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"      )))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 35 #"; Funcion Evaluar Primitiva Binaria"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 17 #"apply-primapp-bin"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 8 #"operador"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 26 3 1 #" "
0 0 14 3 17 #"primitiva-binaria"
0 0 26 3 1 #" "
0 0 14 3 8 #"operador"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 14 #"primitiva-suma"
0 0 26 3 7 #"   () ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 15 #"primitiva-resta"
0 0 26 3 6 #"  () ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 15 #"primitiva-multi"
0 0 26 3 6 #"  () ("
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 13 #"primitiva-div"
0 0 26 3 8 #"    () ("
0 0 14 3 1 #"/"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 16 #"primitiva-concat"
0 0 26 3 4 #" () "
0 0 26 3 1 #"("
0 0 14 3 13 #"string-append"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 14 3 1 #"b"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"      )))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 34 #"; Funcion Evaluar Primitiva Unaria"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 16 #"apply-primapp-un"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 8 #"operador"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 26 3 1 #" "
0 0 14 3 16 #"primitiva-unaria"
0 0 26 3 1 #" "
0 0 14 3 8 #"operador"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 18 #"primitiva-longitud"
0 0 26 3 4 #" () "
0 0 26 3 1 #"("
0 0 14 3 13 #"string-length"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 14 #"primitiva-add1"
0 0 26 3 9 #"     () ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 22 3 1 #"1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 14 #"primitiva-sub1"
0 0 26 3 9 #"     () ("
0 0 14 3 1 #"-"
0 0 26 3 1 #" "
0 0 14 3 1 #"a"
0 0 26 3 1 #" "
0 0 22 3 1 #"1"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 10 #"       )))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";***************"
0 0 17 3 16 #"****************"
0 0 17 3 7 #"*******"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 4 #"****"
0 0 17 3 5 #"*****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 11 #"; AMBIENTES"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 36 #"; Definimos el tipo de dato ambiente"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 26 3 1 #" "
0 0 14 3 11 #"environment"
0 0 26 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 16 #"empty-env-record"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 19 #"extended-env-record"
0 0 26 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 26 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 26 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 14 3 4 #"vals"
0 0 26 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-value?"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 23 #"                      ("
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 31 #"recursively-extended-env-record"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 10 #"proc-names"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 7 #"list-of"
0 0 26 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                   "
0 0 26 3 1 #"("
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 7 #"list-of"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 7 #"list-of"
0 0 26 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                   "
0 0 26 3 1 #"("
0 0 14 3 6 #"bodies"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 7 #"list-of"
0 0 26 3 1 #" "
0 0 14 3 10 #"expresion?"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 35 #"                                   "
0 0 26 3 1 #"("
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 13 #"scheme-value?"
0 0 26 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"v"
0 0 26 3 2 #") "
0 0 22 3 2 #"#t"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 29 #"; Definimos el ambiente Vacio"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 9 #"empty-env"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 3 #" ()"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 16 #"empty-env-record"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 10 #"extend-env"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 26 3 1 #" "
0 0 14 3 4 #"vals"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 19 #"extended-env-record"
0 0 26 3 1 #" "
0 0 14 3 4 #"syms"
0 0 26 3 1 #" "
0 0 14 3 4 #"vals"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 22 #"extend-env-recursively"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 10 #"proc-names"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 26 3 1 #" "
0 0 14 3 7 #"old-env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 31 #"recursively-extended-env-record"
0 0 26 3 1 #" "
0 0 14 3 10 #"proc-names"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 26 3 1 #" "
0 0 14 3 7 #"old-env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 31 #"; Definimos el Ambiente Inicial"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 8 #"init-env"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 3 #" ()"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 10 #"extend-env"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 22 3 1 #"'"
0 0 26 3 1 #"("
0 0 14 3 2 #"@a"
0 0 26 3 1 #" "
0 0 14 3 2 #"@b"
0 0 26 3 1 #" "
0 0 14 3 2 #"@c"
0 0 26 3 1 #" "
0 0 14 3 2 #"@d"
0 0 26 3 1 #" "
0 0 14 3 2 #"@e"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 22 3 1 #"'"
0 0 26 3 1 #"("
0 0 22 3 1 #"1"
0 0 26 3 1 #" "
0 0 22 3 1 #"2"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 19 3 6 #"\"hola\""
0 0 26 3 1 #" "
0 0 19 3 5 #"\"FLP\""
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     ("
0 0 14 3 9 #"empty-env"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 27 #"; Definimos buscar-variable"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 15 #"buscar-variable"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sym"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 26 3 1 #" "
0 0 14 3 11 #"environment"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 16 #"empty-env-record"
0 0 26 3 3 #" ()"
0 0 26 29 1 #"\n"
0 0 26 3 25 #"                        ("
0 0 14 3 10 #"eopl:error"
0 0 26 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Error"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 2 #"la"
0 0 19 3 1 #" "
0 0 19 3 8 #"variable"
0 0 19 3 1 #" "
0 0 19 3 2 #"no"
0 0 19 3 1 #" "
0 0 19 3 7 #"existe\""
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 19 #"extended-env-record"
0 0 26 3 2 #" ("
0 0 14 3 4 #"syms"
0 0 26 3 1 #" "
0 0 14 3 4 #"vals"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 28 #"                           ("
0 0 15 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 3 #"pos"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 26 3 1 #" "
0 0 14 3 3 #"sym"
0 0 26 3 1 #" "
0 0 14 3 4 #"syms"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 30 #"                             ("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 7 #"number?"
0 0 26 3 1 #" "
0 0 14 3 3 #"pos"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 33 #"                                 "
0 0 26 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 26 3 1 #" "
0 0 14 3 4 #"vals"
0 0 26 3 1 #" "
0 0 14 3 3 #"pos"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 33 #"                                 "
0 0 26 3 1 #"("
0 0 14 3 15 #"buscar-variable"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sym"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 31 #"recursively-extended-env-record"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 10 #"proc-names"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 26 3 1 #" "
0 0 14 3 7 #"old-env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 39 #"                                       "
0 0 26 3 1 #"("
0 0 15 3 3 #"let"
0 0 26 3 1 #" "
0 0 26 3 2 #"(("
0 0 14 3 3 #"pos"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 18 #"list-find-position"
0 0 26 3 1 #" "
0 0 14 3 3 #"sym"
0 0 26 3 1 #" "
0 0 14 3 10 #"proc-names"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 26 3 30 #"                              "
0 0 26 3 1 #"("
0 0 14 3 2 #"if"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 7 #"number?"
0 0 26 3 1 #" "
0 0 14 3 3 #"pos"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 26 3 4 #"    "
0 0 26 3 1 #" "
0 0 26 3 29 #"                             "
0 0 26 3 1 #"("
0 0 14 3 9 #"cerradura"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 3 #"pos"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 26 3 4 #"    "
0 0 26 3 1 #" "
0 0 26 3 5 #"     "
0 0 26 3 1 #" "
0 0 26 3 1 #" "
0 0 26 3 2 #"  "
0 0 26 3 29 #"                             "
0 0 26 3 1 #"("
0 0 14 3 8 #"list-ref"
0 0 26 3 1 #" "
0 0 14 3 6 #"bodies"
0 0 26 3 1 #" "
0 0 14 3 3 #"pos"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 26 3 4 #"    "
0 0 26 3 1 #" "
0 0 26 3 5 #"     "
0 0 26 3 1 #" "
0 0 26 3 1 #" "
0 0 26 3 2 #"  "
0 0 26 3 29 #"                             "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 11 #"           "
0 0 26 3 4 #"    "
0 0 26 3 1 #" "
0 0 26 3 29 #"                             "
0 0 26 3 1 #"("
0 0 14 3 15 #"buscar-variable"
0 0 26 3 1 #" "
0 0 14 3 7 #"old-env"
0 0 26 3 1 #" "
0 0 14 3 3 #"sym"
0 0 26 3 7 #")))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";***************"
0 0 17 3 16 #"****************"
0 0 17 3 7 #"*******"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 4 #"****"
0 0 17 3 5 #"*****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 22 #"; FUNCIONES AUXILIARES"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 33 #"; Definimos list-find-position y "
0 0 17 3 10 #"list-find "
0 0 17 3 5 #"index"
0 0 26 29 1 #"\n"
0 0 17 3 34 #"; Nos seriviran para encontrar la "
0 0 17 3 9 #"posicion "
0 0 17 3 2 #"de"
0 0 26 29 1 #"\n"
0 0 17 3 37 #"; un simbolo en la lista de simbolos "
0 0 17 3 6 #"de un "
0 0 17 3 8 #"ambiente"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 18 #"list-find-position"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 3 #"sym"
0 0 26 3 1 #" "
0 0 14 3 3 #"los"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 10 #"list-index"
0 0 26 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"sym1"
0 0 26 3 3 #") ("
0 0 14 3 4 #"eqv?"
0 0 26 3 1 #" "
0 0 14 3 4 #"sym1"
0 0 26 3 1 #" "
0 0 14 3 3 #"sym"
0 0 26 3 3 #")) "
0 0 14 3 3 #"los"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 10 #"list-index"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"pred"
0 0 26 3 1 #" "
0 0 14 3 2 #"ls"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 15 3 4 #"cond"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"      (("
0 0 14 3 5 #"null?"
0 0 26 3 1 #" "
0 0 14 3 2 #"ls"
0 0 26 3 2 #") "
0 0 22 3 2 #"#f"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"      (("
0 0 14 3 4 #"pred"
0 0 26 3 2 #" ("
0 0 14 3 3 #"car"
0 0 26 3 1 #" "
0 0 14 3 2 #"ls"
0 0 26 3 3 #")) "
0 0 22 3 1 #"0"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 4 #"else"
0 0 26 3 2 #" ("
0 0 15 3 3 #"let"
0 0 26 3 3 #" (("
0 0 14 3 12 #"list-index-r"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 10 #"list-index"
0 0 26 3 1 #" "
0 0 14 3 4 #"pred"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 26 3 1 #" "
0 0 14 3 2 #"ls"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 3 13 #"            ("
0 0 14 3 2 #"if"
0 0 26 3 2 #" ("
0 0 14 3 7 #"number?"
0 0 26 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 17 #"                ("
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 12 #"list-index-r"
0 0 26 3 1 #" "
0 0 22 3 1 #"1"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 16 #"                "
0 0 22 3 2 #"#f"
0 0 26 3 6 #"))))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 34 #"; Definimos eval-rands y eval-rand"
0 0 26 29 1 #"\n"
0 0 17 3 15 #"; Nos serviran "
0 0 17 3 13 #"para aplicar "
0 0 17 3 16 #"eval-expression "
0 0 17 3 2 #"a "
0 0 17 3 5 #"cada "
0 0 17 3 9 #"elemento "
0 0 17 3 7 #"de una "
0 0 17 3 6 #"lista "
0 0 17 3 3 #"de "
0 0 17 3 10 #"operandos "
0 0 17 3 13 #"(expresiones)"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 10 #"eval-rands"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 5 #"rands"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 3 #"map"
0 0 26 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 3 #") ("
0 0 14 3 9 #"eval-rand"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")) "
0 0 14 3 5 #"rands"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 9 #"eval-rand"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"rand"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 4 #"rand"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 23 #"; definimos true-value?"
0 0 26 29 1 #"\n"
0 0 17 3 12 #"; determina "
0 0 17 3 2 #"si"
0 0 17 3 1 #" "
0 0 17 3 2 #"un"
0 0 17 3 1 #" "
0 0 17 3 5 #"valor"
0 0 17 3 1 #" "
0 0 17 3 4 #"dado"
0 0 17 3 1 #" "
0 0 17 3 11 #"corresponde"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 3 #"un "
0 0 17 3 6 #"valor "
0 0 17 3 9 #"booleano "
0 0 17 3 6 #"FALSO "
0 0 17 3 2 #"o "
0 0 17 3 9 #"VERDADERO"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 11 #"true-value?"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 1 #"x"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 14 3 3 #"not"
0 0 26 3 2 #" ("
0 0 14 3 5 #"zero?"
0 0 26 3 1 #" "
0 0 14 3 1 #"x"
0 0 26 3 4 #"))))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";***************"
0 0 17 3 16 #"****************"
0 0 17 3 7 #"*******"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 4 #"****"
0 0 17 3 5 #"*****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #"; PROCEDIMIENTOS"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 37 #"; Definimos el tipo de dato Cerradura"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 15 #"define-datatype"
0 0 26 3 1 #" "
0 0 14 3 7 #"procval"
0 0 26 3 1 #" "
0 0 14 3 8 #"procval?"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 14 3 9 #"cerradura"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 8 #"lista-id"
0 0 26 3 2 #" ("
0 0 14 3 7 #"list-of"
0 0 26 3 1 #" "
0 0 14 3 7 #"symbol?"
0 0 26 3 2 #"))"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"exp"
0 0 26 3 1 #" "
0 0 14 3 10 #"expresion?"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   ("
0 0 14 3 3 #"amb"
0 0 26 3 1 #" "
0 0 14 3 12 #"environment?"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 12 #"; Definimos "
0 0 17 3 16 #"apply-procedure "
0 0 17 3 11 #"que evalua "
0 0 17 3 3 #"el "
0 0 17 3 7 #"cuerpo "
0 0 17 3 3 #"de "
0 0 17 3 3 #"un "
0 0 17 3 14 #"procedimiento "
0 0 17 3 3 #"en "
0 0 17 3 3 #"el "
0 0 17 3 9 #"ambiente "
0 0 17 3 10 #"extendido "
0 0 17 3 15 #"correspondiente"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 1 #"("
0 0 15 3 6 #"define"
0 0 26 3 1 #" "
0 0 14 3 15 #"apply-procedure"
0 0 26 29 1 #"\n"
0 0 26 3 3 #"  ("
0 0 15 3 6 #"lambda"
0 0 26 3 2 #" ("
0 0 14 3 4 #"proc"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #")"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    ("
0 0 15 3 5 #"cases"
0 0 26 3 1 #" "
0 0 14 3 7 #"procval"
0 0 26 3 1 #" "
0 0 14 3 4 #"proc"
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 9 #"cerradura"
0 0 26 3 2 #" ("
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 4 #"body"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 2 #") "
0 0 26 3 1 #"("
0 0 14 3 15 #"eval-expression"
0 0 26 3 1 #" "
0 0 14 3 4 #"body"
0 0 26 3 1 #" "
0 0 26 3 1 #"("
0 0 14 3 10 #"extend-env"
0 0 26 3 1 #" "
0 0 14 3 3 #"ids"
0 0 26 3 1 #" "
0 0 14 3 4 #"args"
0 0 26 3 1 #" "
0 0 14 3 3 #"env"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"      )))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 16 #";***************"
0 0 17 3 16 #"****************"
0 0 17 3 7 #"*******"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 4 #"****"
0 0 17 3 1 #"*"
0 0 17 3 4 #"****"
0 0 17 3 5 #"*****"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 2 #"**"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 17 3 1 #"*"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 17 3 9 #"; PRUEBAS"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9         139 22           0 0           0 22 0 17 3 17
#"; --- 2 Punto ---"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 2 #"@a"
0 0 26 29 1 #"\n"
0 0 22 3 1 #"1"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 2 #"@b"
0 0 26 29 1 #"\n"
0 0 22 3 1 #"2"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 2 #"@e"
0 0 26 29 1 #"\n"
0 0 19 3 5 #"\"FLP\""
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9         277 22           0 0           0 45 0 17 3 17
#"; --- 4 Punto ---"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 2 #"Si"
0 0 26 3 2 #" ("
0 0 14 3 3 #"2+3"
0 0 26 3 2 #") "
0 0 14 3 8 #"entonces"
0 0 26 3 1 #" "
0 0 22 3 1 #"2"
0 0 26 3 1 #" "
0 0 14 3 4 #"sino"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 14 3 5 #"finSI"
0 0 26 29 1 #"\n"
0 0 22 3 1 #"2"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 2 #"Si"
0 0 26 3 2 #" ("
0 0 14 3 8 #"longitud"
0 0 26 3 1 #"("
0 0 14 3 2 #"@d"
0 0 26 3 2 #") "
0 0 14 3 1 #"~"
0 0 26 3 1 #" "
0 0 22 3 1 #"4"
0 0 26 3 2 #") "
0 0 14 3 8 #"entonces"
0 0 26 3 1 #" "
0 0 22 3 1 #"2"
0 0 26 3 1 #" "
0 0 14 3 4 #"sino"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 14 3 5 #"finSI"
0 0 26 29 1 #"\n"
0 0 22 3 1 #"3"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9         313 22           0 0           0 51 0 17 3 17
#"; --- 5 Punto ---"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 8 #"declarar"
0 0 26 3 2 #" ("
0 0 14 3 4 #"@x=2"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 4 #"@y=3"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 4 #"@a=7"
0 0 26 3 3 #"){ "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       ("
0 0 14 3 3 #"@a+"
0 0 26 3 1 #"("
0 0 14 3 5 #"@x~@y"
0 0 26 3 3 #")) "
0 0 26 29 1 #"\n"
0 0 26 3 5 #"    }"
0 0 26 29 1 #"\n"
0 0 22 3 1 #"6"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 8 #"declarar"
0 0 26 3 2 #" ("
0 0 14 3 4 #"@x=2"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 4 #"@y=3"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 14 #"              "
0 0 14 3 4 #"@a=7"
0 0 26 3 4 #") { "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"      ("
0 0 14 3 5 #"@a+@b"
0 0 26 3 2 #") "
0 0 26 29 1 #"\n"
0 0 26 3 4 #"   }"
0 0 26 29 1 #"\n"
0 0 22 3 1 #"9"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9         523 22           0 0           0 86 0 17 3 17
#"; --- 6 Punto ---"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 13 #"procedimiento"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@x"
0 0 30 3 2 #",@"
0 0 14 3 1 #"y"
0 0 30 3 2 #",@"
0 0 14 3 1 #"z"
0 0 26 3 2 #") "
0 0 14 3 4 #"haga"
0 0 26 3 3 #" (("
0 0 14 3 5 #"@x+@y"
0 0 26 3 1 #")"
0 0 14 3 3 #"+@z"
0 0 26 3 2 #") "
0 0 14 3 7 #"finProc"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 3 2 #"#("
0 0 14 3 16 #"struct:cerradura"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@x"
0 0 26 3 1 #" "
0 0 14 3 2 #"@y"
0 0 26 3 1 #" "
0 0 14 3 2 #"@z"
0 0 26 3 4 #") #("
0 0 14 3 22 #"struct:primapp-bin-exp"
0 0 26 3 3 #" #("
0 0 14 3 22 #"struct:primapp-bin-exp"
0 0 26 3 3 #" #("
0 0 14 3 14 #"struct:var-exp"
0 0 26 3 1 #" "
0 0 14 3 2 #"@x"
0 0 26 3 4 #") #("
0 0 14 3 20 #"struct:primitiva-sum"
0 0 26 3 4 #") #("
0 0 14 3 14 #"struct:var-exp"
0 0 26 3 1 #" "
0 0 14 3 2 #"@y"
0 0 26 3 5 #")) #("
0 0 14 3 20 #"struct:primitiva-sum"
0 0 26 3 4 #") #("
0 0 14 3 14 #"struct:var-exp"
0 0 26 3 1 #" "
0 0 14 3 2 #"@z"
0 0 26 3 5 #")) #("
0 0 14 3 16 #"struct:extendido"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@a"
0 0 26 3 1 #" "
0 0 14 3 2 #"@b"
0 0 26 3 1 #" "
0 0 14 3 2 #"@c"
0 0 26 3 1 #" "
0 0 14 3 2 #"@d"
0 0 26 3 1 #" "
0 0 14 3 2 #"@e"
0 0 26 3 3 #") ("
0 0 22 3 1 #"1"
0 0 26 3 1 #" "
0 0 22 3 1 #"2"
0 0 26 3 1 #" "
0 0 22 3 1 #"3"
0 0 26 3 1 #" "
0 0 19 3 6 #"\"hola\""
0 0 26 3 1 #" "
0 0 19 3 5 #"\"FLP\""
0 0 26 3 4 #") #("
0 0 14 3 12 #"struct:vacio"
0 0 26 3 3 #")))"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 2 #"Se"
0 0 26 3 1 #" "
0 0 14 3 4 #"debe"
0 0 26 3 1 #" "
0 0 14 3 8 #"retornar"
0 0 26 3 1 #" "
0 0 14 3 3 #"una"
0 0 26 3 1 #" "
0 0 14 3 9 #"cerradura"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 9        1153 22           0 0           0 191 0 17 3 17
#"; --- 7 Punto ---"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 2 #"  "
0 0 14 3 8 #"declarar"
0 0 26 3 2 #" ("
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 4 #"@x=2"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 4 #"@y=3"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 16 #"@a=procedimiento"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@x"
0 0 30 3 2 #",@"
0 0 14 3 1 #"y"
0 0 30 3 2 #",@"
0 0 14 3 1 #"z"
0 0 26 3 2 #") "
0 0 14 3 4 #"haga"
0 0 26 3 3 #" (("
0 0 14 3 5 #"@x+@y"
0 0 26 3 1 #")"
0 0 14 3 3 #"+@z"
0 0 26 3 2 #") "
0 0 14 3 7 #"finProc"
0 0 26 29 1 #"\n"
0 0 26 3 9 #"     ) { "
0 0 26 29 1 #"\n"
0 0 26 3 9 #"         "
0 0 14 3 7 #"evaluar"
0 0 26 3 1 #" "
0 0 14 3 2 #"@a"
0 0 26 3 2 #" ("
0 0 22 3 1 #"1"
0 0 30 3 1 #","
0 0 22 3 1 #"2"
0 0 30 3 2 #",@"
0 0 14 3 1 #"x"
0 0 26 3 2 #") "
0 0 14 3 7 #"finEval"
0 0 26 3 2 #"  "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"       }"
0 0 26 29 1 #"\n"
0 0 22 3 1 #"5"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 8 #"declarar"
0 0 26 3 2 #" ("
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 14 3 16 #"@x=procedimiento"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@a"
0 0 30 3 2 #",@"
0 0 14 3 1 #"b"
0 0 26 3 2 #") "
0 0 14 3 4 #"haga"
0 0 26 3 3 #" (("
0 0 14 3 5 #"@a*@a"
0 0 26 3 2 #") "
0 0 14 3 1 #"+"
0 0 26 3 2 #" ("
0 0 14 3 5 #"@b*@b"
0 0 26 3 3 #")) "
0 0 14 3 7 #"finProc"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 5 #"     "
0 0 14 3 16 #"@y=procedimiento"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@x"
0 0 30 3 2 #",@"
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 14 3 4 #"haga"
0 0 26 3 2 #" ("
0 0 14 3 5 #"@x+@y"
0 0 26 3 2 #") "
0 0 14 3 7 #"finProc"
0 0 26 29 1 #"\n"
0 0 26 3 8 #"    ) { "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"      ( "
0 0 14 3 7 #"evaluar"
0 0 26 3 1 #" "
0 0 14 3 2 #"@x"
0 0 26 3 1 #"("
0 0 22 3 1 #"1"
0 0 30 3 1 #","
0 0 22 3 1 #"2"
0 0 26 3 2 #") "
0 0 14 3 7 #"finEval"
0 0 26 3 1 #" "
0 0 14 3 1 #"+"
0 0 26 3 1 #" "
0 0 14 3 7 #"evaluar"
0 0 26 3 1 #" "
0 0 14 3 2 #"@y"
0 0 26 3 1 #"("
0 0 22 3 1 #"2"
0 0 30 3 1 #","
0 0 22 3 1 #"3"
0 0 26 3 2 #") "
0 0 14 3 7 #"finEval"
0 0 26 3 4 #" )  "
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     }"
0 0 26 29 1 #"\n"
0 0 22 3 2 #"10"
0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0 0 14 3 3 #"-->"
0 0 26 3 1 #" "
0 0 14 3 8 #"declarar"
0 0 26 3 2 #" ("
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 3 #"@x="
0 0 26 3 1 #" "
0 0 14 3 2 #"Si"
0 0 26 3 2 #" ("
0 0 14 3 5 #"@a*@b"
0 0 26 3 2 #") "
0 0 14 3 8 #"entonces"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@d"
0 0 26 3 1 #" "
0 0 14 3 6 #"concat"
0 0 26 3 1 #" "
0 0 14 3 2 #"@e"
0 0 26 3 2 #") "
0 0 14 3 4 #"sino"
0 0 26 3 1 #" "
0 0 14 3 8 #"longitud"
0 0 26 3 2 #"(("
0 0 14 3 2 #"@d"
0 0 26 3 1 #" "
0 0 14 3 6 #"concat"
0 0 26 3 1 #" "
0 0 14 3 2 #"@e"
0 0 26 3 3 #")) "
0 0 14 3 5 #"finSI"
0 0 17 3 1 #";"
0 0 26 29 1 #"\n"
0 0 26 3 6 #"      "
0 0 14 3 16 #"@y=procedimiento"
0 0 26 3 2 #" ("
0 0 14 3 2 #"@x"
0 0 30 3 2 #",@"
0 0 14 3 1 #"y"
0 0 26 3 2 #") "
0 0 14 3 4 #"haga"
0 0 26 3 2 #" ("
0 0 14 3 5 #"@x+@y"
0 0 26 3 2 #") "
0 0 14 3 7 #"finProc"
0 0 26 3 1 #" "
0 0 26 29 1 #"\n"
0 0 26 3 7 #"   ) { "
0 0 26 29 1 #"\n"
0 0 26 3 8 #"      ( "
0 0 14 3 8 #"longitud"
0 0 26 3 1 #"("
0 0 14 3 2 #"@x"
0 0 26 3 2 #") "
0 0 14 3 1 #"*"
0 0 26 3 1 #" "
0 0 14 3 7 #"evaluar"
0 0 26 3 1 #" "
0 0 14 3 2 #"@y"
0 0 26 3 1 #"("
0 0 22 3 1 #"2"
0 0 30 3 1 #","
0 0 22 3 1 #"3"
0 0 26 3 2 #") "
0 0 14 3 7 #"finEval"
0 0 26 3 4 #" )  "
0 0 26 29 1 #"\n"
0 0 26 3 6 #"     }"
0 0 26 29 1 #"\n"
0 0 22 3 2 #"35"
0           0 0 0 26 29 1 #"\n"
0 0 26 29 1 #"\n"
0           0
